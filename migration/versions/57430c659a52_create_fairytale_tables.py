"""Create fairytale tables

Revision ID: 57430c659a52
Revises: 02b03511b8c9
Create Date: 2024-10-10 07:57:01.491790

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '57430c659a52'
down_revision: Union[str, None] = '02b03511b8c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('course')
    op.drop_table('topics')
    op.drop_table('constructorstanding')
    op.drop_table('driverranking')
    op.drop_table('team')
    op.drop_table('driver')
    op.drop_table('student')
    op.drop_table('apple_ceos')
    op.drop_table('enrollment')
    op.drop_table('rankings')
    op.alter_column('houses', 'pig_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('pigs', sa.Column('pig_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('pigs', sa.Column('pig_house', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.create_index(op.f('ix_pigs_pig_name'), 'pigs', ['pig_name'], unique=False)
    op.add_column('wolves', sa.Column('wolf_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('wolves', sa.Column('wolf_power', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_wolves_wolf_name'), 'wolves', ['wolf_name'], unique=False)
    op.drop_column('wolves', 'name')
    op.drop_column('wolves', 'power')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('wolves', sa.Column('power', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('wolves', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_wolves_wolf_name'), table_name='wolves')
    op.drop_column('wolves', 'wolf_power')
    op.drop_column('wolves', 'wolf_name')
    op.drop_index(op.f('ix_pigs_pig_name'), table_name='pigs')
    op.drop_column('pigs', 'pig_house')
    op.drop_column('pigs', 'pig_name')
    op.alter_column('houses', 'pig_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_table('rankings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ranking_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ranking_pkey')
    )
    op.create_table('enrollment',
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name='enrollment_course_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], name='enrollment_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enrollment_pkey')
    )
    op.create_table('apple_ceos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('first_year_active', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apple_ceos_pkey')
    )
    op.create_table('student',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='student_pkey')
    )
    op.create_table('driver',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('team_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name='drivers_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='drivers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('team',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='teams_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('driverranking',
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wins', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], name='driverranking_driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='driverranking_pkey')
    )
    op.create_table('constructorstanding',
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name='constructorstanding_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='constructorstanding_pkey')
    )
    op.create_table('topics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='topic_pkey')
    )
    op.create_table('course',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='course_pkey')
    )
    # ### end Alembic commands ###
